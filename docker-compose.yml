# Removed obsolete 'version' attribute

services:

  membership:
    build: .
    command: ./membership
    container_name: membership # Added explicit name
    ports:
      - "7946:7946"
      - "7946:7946/udp" # Added UDP port for gossip protocol
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7946/members"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks: # Assign explicit network
      - app-network

  db-1:
    image: postgres:13
    container_name: db-1 # Added explicit name
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata1:/var/lib/postgresql/data
    networks: # Assign explicit network
      - app-network

  db-2:
    image: postgres:13
    container_name: db-2 # Added explicit name
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata2:/var/lib/postgresql/data
    networks: # Assign explicit network
      - app-network

  db-3:
    image: postgres:13
    container_name: db-3 # Added explicit name
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata3:/var/lib/postgresql/data
    networks: # Assign explicit network
      - app-network

  db-4:
    image: postgres:13
    container_name: db-4 # Added explicit name
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata4:/var/lib/postgresql/data
    networks: # Assign explicit network
      - app-network

  node-1:
    build: .
    command: ./node
    container_name: node-1 # Added explicit name
    environment:
      - NODE_ID=1
      - DB_HOST=db-1
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8081:8080"
      - "8001:8001"
    depends_on:
      db-1:
        condition: service_started
      membership:
        condition: service_healthy
    networks: # Assign explicit network
      - app-network

  node-2:
    build: .
    command: ./node
    container_name: node-2 # Added explicit name
    environment:
      - NODE_ID=2
      - DB_HOST=db-2
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8082:8080"
      - "8002:8002"
    depends_on:
      db-2:
        condition: service_started
      membership:
        condition: service_healthy
    networks: # Assign explicit network
      - app-network

  node-3:
    build: .
    command: ./node
    container_name: node-3 # Added explicit name
    environment:
      - NODE_ID=3
      - DB_HOST=db-3
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8083:8080"
      - "8003:8003"
    depends_on:
      db-3:
        condition: service_started
      membership:
        condition: service_healthy
    networks: # Assign explicit network
      - app-network

  node-4:
    build: .
    command: ./node
    container_name: node-4 # Added explicit name
    environment:
      - NODE_ID=4
      - DB_HOST=db-4
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8084:8080"
      - "8004:8004"
    depends_on:
      db-4:
        condition: service_started
      membership:
        condition: service_healthy
    networks: # Assign explicit network
      - app-network

  # --- Updated Middleware Service ---
  middleware:
    build: . # Uses the same Dockerfile (ensure it includes docker-cli)
    command: ./middleware
    container_name: middleware # Added explicit name
    ports:
      - "8090:8090"
    depends_on: # Optional
      - node-1
      - node-2
      - node-3
      - node-4
    volumes:
      # !!! Mount the Docker socket - REQUIRED for Node Control - SECURITY WARNING !!!
      - /var/run/docker.sock:/var/run/docker.sock
    networks: # Assign explicit network
      - app-network
  # --- End Updated Middleware Service ---

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus # Added explicit name
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - node-1
      - node-2
      - node-3
      - node-4
    networks: # Assign explicit network
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana # Added explicit name
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - prometheus
    networks: # Assign explicit network
      - app-network

# Define the network explicitly
networks:
  app-network:
    driver: bridge

# Define persistent volumes (as in original file)
volumes:
  pgdata1:
  pgdata2:
  pgdata3:
  pgdata4:
  grafana-storage:
